name: BumpVersion
on:
  workflow_dispatch:
    inputs:
      major_version:
        description: 'Major version'
        required: true
      minor_version:
        description: 'Minor version'
        required: true
      patch_version:
        description: 'Patch version'
        required: true

jobs:
  run:
    runs-on:  ubuntu-latest
    env:
      MAJOR_VERSION: ${{ github.event.inputs.major_version }}
      MINOR_VERSION: ${{ github.event.inputs.minor_version }}
      PATCH_VERSION: ${{ github.event.inputs.patch_version }}
      BUNDLE_GEMFILE: .github/workflows/gemfiles/BumpVersion.gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.1
          bundler-cache: true
      - name: Update versions
        run: |
          set -x
          sed -i -e 's/    versionCode \([0-9]*\)/echo \"    versionCode\" $((\1 + 1))/eg' version.txt
          sed -i -e 's/    major = \([0-9]*\)/echo \"    major =\" $MAJOR_VERSION/eg' version.txt
          sed -i -e 's/    minor = \([0-9]*\)/echo \"    minor =\" $MINOR_VERSION/eg' version.txt
          sed -i -e 's/    patch = \([0-9]*\)/echo \"    patch =\" $PATCH_VERSION/eg' version.txt
      - name: Generate github token
        id: generate_token
        uses: tibdex/github-app-token@7ce9ffdcdeb2ba82b01b51d6584a6a85872336d4
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - name: Update release note
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          REPOSITORY: ${{ github.repository }}
        run: bundle exec ruby .github/workflows/scripts/update_release_note.rb
      - name: Create pull request
        env:
          VERSION: $MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          # GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          set -x
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          branchName=$(printf "feature/update-to-v%02d%02d%02d\n" $MAJOR_VERSION $MINOR_VERSION $PATCH_VERSION)
          git checkout -b $branchName
          git add release_note.txt version.txt
          version=$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION
          git commit -m "Update to $version"
          git push origin $branchName
          gh pr create --title "バージョン$versionに更新" --body "$(cat pull_request_message.txt)"
